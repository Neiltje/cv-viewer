/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nwj.cvviewer.api;

import com.nwj.cvviewer.model.Cv;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-31T09:46:08.894+01:00")

@Api(value = "cv", description = "the cv API")
public interface CvApi {

    Logger log = LoggerFactory.getLogger(CvApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Get all CVs", nickname = "getAllCVs", notes = "Get all CVs defined on the system", response = Cv.class, responseContainer = "List", tags={ "cv", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Cv.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/cv/getAll",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Cv>> getAllCVs() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"summary\" : \"summary\",  \"sourceURL\" : \"sourceURL\",  \"skills\" : {    \"notes\" : \"notes\",    \"skillGroups\" : [ {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    }, {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    } ]  },  \"firstName\" : \"firstName\",  \"image\" : \"image\",  \"oneLineSummary\" : \"oneLineSummary\",  \"education\" : {    \"institutions\" : [ {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    }, {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"name\" : \"name\",  \"header\" : {    \"emailAddress\" : \"emailAddress\",    \"nationality\" : \"nationality\",    \"currentPosition\" : \"currentPosition\",    \"phoneMobile\" : \"phoneMobile\",    \"dateOfBirth\" : \"2000-01-23\",    \"recentWorkExperience\" : [ {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"addressLines\" : [ \"addressLines\", \"addressLines\" ],    \"keySkills\" : [ {      \"skill\" : \"skill\",      \"ability\" : 0    }, {      \"skill\" : \"skill\",      \"ability\" : 0    } ],    \"maritalStatus\" : \"maritalStatus\"  },  \"footnote\" : \"footnote\",  \"employment\" : {    \"institutions\" : [ {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"interests\" : [ \"interests\", \"interests\" ]}, {  \"summary\" : \"summary\",  \"sourceURL\" : \"sourceURL\",  \"skills\" : {    \"notes\" : \"notes\",    \"skillGroups\" : [ {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    }, {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    } ]  },  \"firstName\" : \"firstName\",  \"image\" : \"image\",  \"oneLineSummary\" : \"oneLineSummary\",  \"education\" : {    \"institutions\" : [ {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    }, {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"name\" : \"name\",  \"header\" : {    \"emailAddress\" : \"emailAddress\",    \"nationality\" : \"nationality\",    \"currentPosition\" : \"currentPosition\",    \"phoneMobile\" : \"phoneMobile\",    \"dateOfBirth\" : \"2000-01-23\",    \"recentWorkExperience\" : [ {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"addressLines\" : [ \"addressLines\", \"addressLines\" ],    \"keySkills\" : [ {      \"skill\" : \"skill\",      \"ability\" : 0    }, {      \"skill\" : \"skill\",      \"ability\" : 0    } ],    \"maritalStatus\" : \"maritalStatus\"  },  \"footnote\" : \"footnote\",  \"employment\" : {    \"institutions\" : [ {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"interests\" : [ \"interests\", \"interests\" ]} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CvApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get CV by name", nickname = "getCvByName", notes = "Get a CV defined on the system by name", response = Cv.class, tags={ "cv", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Cv.class),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/cv/findByName/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Cv> getCvByName(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "name", required = true) String name) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"summary\" : \"summary\",  \"sourceURL\" : \"sourceURL\",  \"skills\" : {    \"notes\" : \"notes\",    \"skillGroups\" : [ {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    }, {      \"skillSet\" : [ {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      }, {        \"notes\" : \"notes\",        \"ability\" : 5,        \"type\" : \"type\",        \"experience\" : 5,        \"seq\" : 1      } ],      \"heading\" : \"heading\",      \"seq\" : 6    } ]  },  \"firstName\" : \"firstName\",  \"image\" : \"image\",  \"oneLineSummary\" : \"oneLineSummary\",  \"education\" : {    \"institutions\" : [ {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    }, {      \"institution\" : \"institution\",      \"qualifications\" : [ {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      }, {        \"notes\" : \"notes\",        \"subject\" : \"subject\",        \"grade\" : \"grade\",        \"type\" : \"type\"      } ],      \"endDate\" : \"2000-01-23\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"name\" : \"name\",  \"header\" : {    \"emailAddress\" : \"emailAddress\",    \"nationality\" : \"nationality\",    \"currentPosition\" : \"currentPosition\",    \"phoneMobile\" : \"phoneMobile\",    \"dateOfBirth\" : \"2000-01-23\",    \"recentWorkExperience\" : [ {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : \"notes\",      \"endDate\" : \"2000-01-23\",      \"roles\" : [ \"roles\", \"roles\" ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"addressLines\" : [ \"addressLines\", \"addressLines\" ],    \"keySkills\" : [ {      \"skill\" : \"skill\",      \"ability\" : 0    }, {      \"skill\" : \"skill\",      \"ability\" : 0    } ],    \"maritalStatus\" : \"maritalStatus\"  },  \"footnote\" : \"footnote\",  \"employment\" : {    \"institutions\" : [ {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    }, {      \"notes\" : [ \"notes\", \"notes\" ],      \"endDate\" : \"2000-01-23\",      \"roles\" : [ {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      }, {        \"notes\" : [ \"notes\", \"notes\" ],        \"endDate\" : \"2000-01-23\",        \"title\" : \"title\",        \"startDate\" : \"2000-01-23\"      } ],      \"employer\" : \"employer\",      \"startDate\" : \"2000-01-23\"    } ],    \"notes\" : \"notes\"  },  \"interests\" : [ \"interests\", \"interests\" ]}", Cv.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CvApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Login to CV Viewer for updates", nickname = "login", notes = "Login", authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "cv", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/cv/login/{name}",
        method = RequestMethod.POST)
    default ResponseEntity<Void> login(@ApiParam(value = "",required=true) @PathVariable("name") String name) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CvApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update a CV", nickname = "putCv", notes = "Update a CV", authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "cv", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/cv",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Void> putCv(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Cv cv) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default CvApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
