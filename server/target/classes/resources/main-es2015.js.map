{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/zone.js/dist/zone-evergreen.js","./src/app/api/api.module.ts","./src/app/api/api/api.ts","./src/app/api/api/cv.service.ts","./src/app/api/configuration.ts","./src/app/api/encoder.ts","./src/app/api/index.ts","./src/app/api/variables.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/callback.pipe.ts","./src/app/common/datepicker/datepicker.component.ts","./src/app/common/datepicker/datepicker.component.html","./src/app/cv-bottom-bar/cv-bottom-bar.component.ts","./src/app/cv-bottom-bar/cv-bottom-bar.component.html","./src/app/cv-education/cv-education.component.ts","./src/app/cv-education/cv-education.component.html","./src/app/cv-employment/cv-employment.component.ts","./src/app/cv-employment/cv-employment.component.html","./src/app/cv-heading/cv-heading.component.ts","./src/app/cv-heading/cv-heading.component.html","./src/app/cv-interests/cv-interests.component.ts","./src/app/cv-interests/cv-interests.component.html","./src/app/cv-json/cv-json.component.ts","./src/app/cv-json/cv-json.component.html","./src/app/cv-list/cv-list.component.ts","./src/app/cv-list/cv-list.component.html","./src/app/cv-login/cv-login.component.ts","./src/app/cv-login/cv-login.component.html","./src/app/cv-skills/cv-skills.component.ts","./src/app/cv-skills/cv-skills.component.html","./src/app/cv-stars/cv-stars.component.ts","./src/app/cv-stars/cv-stars.component.html","./src/app/cv-summary/cv-summary.component.ts","./src/app/cv-summary/cv-summary.component.html","./src/app/cv/cv.component.ts","./src/app/cv/cv.component.html","./src/app/data.service.ts","./src/app/order-by-date.pipe.ts","./src/app/order-by.pipe.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/main.ts","./src/polyfills.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAA0C,GAAG,oCAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oGAAC;AAChE,IAAI,SAAS;AACb,CAAC,eAAe;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAiE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU,6CAA6C,eAAe;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpwBAAwB,mBAAmB;AAC3C,yBAAyB,oBAAoB;AAC7C,qCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU,IAAI,YAAY,4BAA4B,QAAQ,sBAAsB,WAAW,GAAG,+CAA+C,SAAS,YAAY;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,wBAAwB,oCAAoC;AAC5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE,2CAA2C,cAAc;AACzD,8CAA8C,2CAA2C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sEAAsE;AAC1J;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2EAA2E,gBAAgB;AAC3F,kCAAkC;AAClC;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,gBAAgB;AAC3D,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD;AACjF;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E,8CAA8C,kCAAkC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,0CAA0C,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0CAA0C,wCAAwC;AAClF,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uCAAuC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC;AACroDAAoD,cAAc,mBAAmB,yBAAyB,EAAE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,yDAAyD,aAAa,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrmCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,GAAG,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjmDAAmD,sDAAsD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,8FAA8F;AAC9F,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAA4E;AAC3F;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,0CAA0C;AAClH;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC;;;;;;;;;;;;;AC33FD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAClC;AAIH;;;AAStC,MAAM,SAAS;IAQlB,YAAqC,YAAuB,EACnC,IAAgB;QACrC,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;SACvF;QACD,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,+DAA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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            get [Symbol.species]() { return ZoneAwarePromise; }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { CvService } from './api/cv.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    CvService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './cv.service';\nimport { CvService } from './cv.service';\nexport const APIS = [CvService];\n","/**\n * CV Viewer\n * CV Viewer.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: neilje123@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\nimport { Cv } from '../model/cv';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class CvService {\n\n    protected basePath = 'https://localhost:9090';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get all CVs\n     * Get all CVs defined on the system\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllCVs(observe?: 'body', reportProgress?: boolean): Observable<Array<Cv>>;\n    public getAllCVs(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Cv>>>;\n    public getAllCVs(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Cv>>>;\n    public getAllCVs(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Array<Cv>>(`${this.basePath}/cv/getAll`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CV by name\n     * Get a CV defined on the system by name\n     * @param name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCvByName(name: string, observe?: 'body', reportProgress?: boolean): Observable<Cv>;\n    public getCvByName(name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Cv>>;\n    public getCvByName(name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Cv>>;\n    public getCvByName(name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling getCvByName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (name !== undefined && name !== null) {\n            queryParameters = queryParameters.set('name', <any>name);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<Cv>(`${this.basePath}/cv/findByName/`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Login to CV Viewer for updates\n     * Login\n     * @param name\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public login(name: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public login(name: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public login(name: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public login(name: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (name === null || name === undefined) {\n            throw new Error('Required parameter name was null or undefined when calling login.');\n        }\n        let headers = this.defaultHeaders;\n\n        // authentication (basicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.post<any>(`${this.basePath}/cv/login/${encodeURIComponent(String(name))}`,\n            null,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update a CV\n     * Update a CV\n     * @param cv\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putCv(cv: Cv, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public putCv(cv: Cv, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public putCv(cv: Cv, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public putCv(cv: Cv, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (cv === null || cv === undefined) {\n            throw new Error('Required parameter cv was null or undefined when calling putCv.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // authentication (basicAuth) required\n        if (this.configuration.username || this.configuration.password) {\n            headers = headers.set('Authorization', 'Basic ' + btoa(this.configuration.username + ':' + this.configuration.password));\n        }\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/cv`,\n            cv,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-viewer',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent  {\n  name = 'Angular';\n}\n","<app-top-bar></app-top-bar>\n<br>\n<div>\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { CvListComponent } from './cv-list/cv-list.component';\nimport { CvComponent } from './cv/cv.component';\nimport { CvEducationComponent } from './cv-education/cv-education.component';\nimport { CvSkillsComponent } from './cv-skills/cv-skills.component';\nimport { CvEmploymentComponent } from './cv-employment/cv-employment.component';\nimport { CvInterestsComponent } from './cv-interests/cv-interests.component';\nimport { CvSummaryComponent } from './cv-summary/cv-summary.component';\nimport { CvBottomBarComponent } from './cv-bottom-bar/cv-bottom-bar.component';\nimport { CvHeadingComponent } from './cv-heading/cv-heading.component';\nimport { CallbackPipe } from './callback.pipe';\nimport { OrderByPipe } from './order-by.pipe';\nimport { OrderByDatePipe } from './order-by-date.pipe';\nimport { CvStarsComponent } from './cv-stars/cv-stars.component';\nimport { DataService } from './data.service';\nimport { DatePickerComponent } from './common/datepicker/datepicker.component';\nimport { CvJsonComponent } from './cv-json/cv-json.component'\n\nimport { CvService } from './api/index';\nimport { CvLoginComponent } from './cv-login/cv-login.component';\nimport { AuthenticationService } from './authentication.service';\n\n\n@NgModule({\n  imports:      [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatDialogModule,\n    ClipboardModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: '', component: CvListComponent },\n      { path: 'cvs/:cvName', component: CvComponent }\n    ])\n  ],\n  declarations: [\n     AppComponent,\n     TopBarComponent,\n     CvListComponent,\n     CvComponent,\n     CvEducationComponent,\n     CvSkillsComponent,\n     CvEmploymentComponent,\n     CvInterestsComponent,\n     CvSummaryComponent,\n     CvBottomBarComponent,\n     CvHeadingComponent,\n     CallbackPipe,\n     OrderByPipe,\n     OrderByDatePipe,\n     CvStarsComponent,\n     DatePickerComponent,\n     CvJsonComponent,\n     CvLoginComponent\n  ],\n  bootstrap: [\n    AppComponent\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue : '/' },\n    DataService,\n    CvService,\n    AuthenticationService\n  ],\n  entryComponents: [\n    CvJsonComponent,\n    CvLoginComponent\n  ]\n})\nexport class AppModule { }\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { CvService } from './api/index';\nimport { ApiModule } from './api/index';\n\n@Injectable()\nexport class AuthenticationService {\n\n  authenticated = false;\n  userName = undefined;\n\n  @Output() authenticatedNotify = new EventEmitter<boolean>();\n\n  constructor(\n    private cvService: CvService\n  ) { }\n\n  login(userName: string, userPassword: string) {\n    this.cvService.configuration.username = userName;\n    this.cvService.configuration.password = userPassword;\n    this.cvService.login(userName).subscribe(\n      (response) => {\n        this.authenticated = true;\n        this.userName = userName;\n        this.authenticatedNotify.emit(this.authenticated);\n      },\n      (error) => {\n        this.authenticated = false;\n        this.userName = undefined;\n        this.authenticatedNotify.emit(this.authenticated);\n      });\n  }\n\n  logout() {\n    this.authenticated = false;\n    this.userName = undefined;\n    this.cvService.configuration.username = undefined;\n    this.cvService.configuration.password = undefined;\n  }\n\n  getAuthenticationEventEmitter() {\n    return this.authenticatedNotify;\n  }\n\n}\n","import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'callback',\n    pure: false\n})\nexport class CallbackPipe implements PipeTransform {\n    transform(items: any[], callback: (item: any, ...args: any[]) => boolean, ...args: any[]): any {\n        if (!items || !callback) {\n            return items;\n        }\n        return items.filter(item => callback(item, args));\n    }\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { formatDate } from '@angular/common';\nimport { FormControl } from '@angular/forms';\nimport { DataService } from '../../data.service';\n\nexport const PICK_FORMATS = {\n  parse: {dateInput: {month: 'short', year: 'numeric', day: 'numeric'}},\n  display: {\n      dateInput: 'input',\n      monthYearLabel: {year: 'numeric', month: 'short'},\n      dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n      monthYearA11yLabel: {year: 'numeric', month: 'long'}\n  }\n};\n\nclass PickDateAdapter extends NativeDateAdapter {\n      \n  parse(value: any): Date | null {\n    if ((typeof value === 'string') && (value.indexOf('-') > -1)) {\n      const str = value.split('-');\n      const year = Number(str[2]);\n      const month = Number(str[1]) - 1;\n      const date = Number(str[0]);\n      return new Date(year, month, date);\n    }\n    const timestamp = typeof value === 'number' ? value : Date.parse(value);\n    return isNaN(timestamp) ? null : new Date(timestamp);\n  }\n\n  format(date: Date, displayFormat: Object): string {\n      if (displayFormat === 'input') {\n          return formatDate(date,'dd-MM-yyyy',this.locale);;\n      } else {\n          return date.toDateString();\n      }\n  }\n}\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [\n    {provide: DateAdapter, useClass: PickDateAdapter},\n    {provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS}\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n\n  @Input() date;\n  @Output() dateNotify = new EventEmitter<Date>();\n  @Output() dateChange:EventEmitter<MatDatepickerInputEvent<any>>;\n\n  datePicker;\n\n  valueChange() {\n    this.dateNotify.emit(this.date);\n  }\n\n  dateChanged(event: any) {\n    this.dateNotify.emit(event.value);\n  }\n\n  constructor(\n    public dataService: DataService\n  ) { }\n\n  ngOnInit() {\n    this.datePicker = new FormControl(this.date);\n  }\n\n}","<mat-form-field *ngIf=\"dataService.editMode\" class=\"dateFormField\">\n  <mat-label>Enter date or use date picker ...</mat-label>\n  <input matInput [matDatepicker]=\"datePicker\" [(ngModel)]=\"date\" (dateChange)=\"dateChanged($event)\">\n  <mat-datepicker-toggle matSuffix [for]=\"datePicker\"></mat-datepicker-toggle>\n  <mat-datepicker #datePicker (closed)=\"valueChange()\"></mat-datepicker>\n</mat-form-field>\n<span *ngIf=\"!dataService.editMode\">{{ date | date:'dd-MM-yyyy' }}</span>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cv-bottom-bar',\n  templateUrl: './cv-bottom-bar.component.html',\n  styleUrls: ['./cv-bottom-bar.component.scss']\n})\nexport class CvBottomBarComponent implements OnInit {\n\n  @Input() footnote;\n  @Input() sourceURL;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"bottomBar\">\n  {{ footnote }}\n  <span *ngIf=\"sourceURL\">\n     Source: \n    <a href=\"{{ sourceURL }}\" target=\"_blank\" rel=\"noopener\">{{ sourceURL }}</a>\n  </span>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-education',\n  templateUrl: './cv-education.component.html',\n  styleUrls: ['./cv-education.component.scss']\n})\nexport class CvEducationComponent implements OnInit {\n\n  title = \"Education\";\n  @Input() name;\n  @Input() text;\n  @Input() image;\n  @Input() education;\n\n  @Output() textNotify = new EventEmitter<string>();\n  \n  updateText(text: string) {\n    this.text = text;\n    this.textNotify.emit(this.text);\n  }\n\n  updateStartDate(i, date: Date) {\n    this.education.institutions[i].startDate = date;\n  }\n\n  updateEndDate(i, date: Date) {\n    this.education.institutions[i].endDate = date;\n  }\n\n  addInstitution() {\n    this.education.institutions.push({ institution: \"New institution\", qualifications: [{}]} );\n  }\n\n  removeInstitution(i) {\n    if (this.education.institutions.length == 1) {\n      this.education.institutions[0] = { institution: \"New institution\", qualifications: [{}] };\n    } else {\n      this.education.institutions.splice(i, 1);\n    }\n  }\n\n  addQualification(i) {\n    this.education.institutions[i].qualifications.push({});\n  }\n\n  removeQualification(i, j) {\n    if (this.education.institutions[i].qualifications.length == 1) {\n      this.education.institutions[i].qualifications[0] = {};\n    } else {\n      this.education.institutions[i].qualifications.splice(j, 1);\n    }\n  }\n  \n  moveQualificationUp(i, j) {\n    this.education.institutions[i].qualifications.splice(j - 1, 0, this.education.institutions[i].qualifications.splice(j, 1)[0]);\n  }\n\n  moveQualificationDown(i, j) {\n    this.education.institutions[i].qualifications.splice(j + 1, 0, this.education.institutions[i].qualifications.splice(j, 1)[0]);\n  }\n\n  constructor(\n    public dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","<app-cv-heading\n  [title]=\"title\"\n  [name]=\"name\"\n  [text]=\"text\"\n  [image]=\"image\"\n  (textNotify) = \"updateText($event)\">\n</app-cv-heading>\n\n<h2>Institutions:</h2>\n\n<div *ngIf=\"education.institutions && education.institutions[0]; else noDetails\">\n\n  <div class=\"mat-accordion-div\">\n\n    <mat-accordion>\n\n      <mat-expansion-panel *ngFor=\"let institution of education.institutions | orderByDate: 'startDate'; let i = index\">\n\n        <mat-expansion-panel-header #panelH>\n          <mat-panel-title>\n            {{ institution.institution }}\n            <div class=\"dateLight\">\n              (\n              {{ institution.startDate | date:'dd-MM-yyyy' }}\n              -\n              {{ institution.endDate | date:'dd-MM-yyyy'}}\n              )\n            </div>\n          </mat-panel-title>\n          <mat-panel-description (click)=\"panelH._toggle()\">\n            <a (click)=\"removeInstitution(i)\">\n              <mat-icon matTooltip=\"Remove institution\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\">remove</mat-icon>\n            </a>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <br>\n\n        <table *ngIf=\"dataService.editMode\" class=\"fullWidth\">\n          <colgroup>\n            <col span=\"1\" style=\"width: 20%;\">\n            <col span=\"1\" style=\"width: 2%;\">\n            <col span=\"1\" style=\"width: 78;\">\n          </colgroup>\n          <tr>\n            <td>Name</td>\n            <td>:</td>\n            <td>\n              <input type=\"text\" name=\"name\" [(ngModel)]=\"institution.institution\" class=\"editable\"/>\n            </td>\n          </tr>\n          <tr>\n            <td>Start Date</td>\n            <td>:</td>\n            <td>\n              <app-datepicker\n                [date] = \"institution.startDate\"\n                (dateNotify) = \"updateStartDate(i, $event)\">\n              </app-datepicker>\n            </td>\n          </tr>\n          <tr>\n            <td>End Date</td>\n            <td>:</td>\n            <td>\n              <app-datepicker\n                [date] = \"institution.endDate\"\n                (dateNotify) = \"updateEndDate(i, $event)\">\n              </app-datepicker>\n            </td>\n          </tr>\n        </table>\n\n        <table class=\"fullWidth\">\n          <colgroup>\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 20%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 50%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n          </colgroup>\n          <tr>\n            <th>Type</th>\n            <th>Subject</th>\n            <th>Grade</th>\n            <th>Notes</th>\n            <th *ngIf=\"dataService.editMode\">Remove</th>\n            <th *ngIf=\"dataService.editMode\">Up</th>\n            <th *ngIf=\"dataService.editMode\">Down</th>\n          </tr>\n          <tr *ngFor=\"let qualification of institution.qualifications | orderBy: 'grade'; let j = index\">\n            <td  *ngIf=\"!dataService.editMode\">{{ qualification.type }}</td>\n            <td  *ngIf=\"!dataService.editMode\">{{ qualification.subject }}</td>\n            <td  *ngIf=\"!dataService.editMode\">{{ qualification.grade }}</td>\n            <td  *ngIf=\"!dataService.editMode\">{{ qualification.notes }}</td>\n            <td  *ngIf=\"dataService.editMode\" class=\"skillColumn\">\n              <input type=\"text\" name=\"type\" [(ngModel)]=\"qualification.type\" class=\"editable\"/>\n            </td>\n            <td  *ngIf=\"dataService.editMode\" class=\"skillColumn\">\n              <input type=\"text\" name=\"subject\" [(ngModel)]=\"qualification.subject\" class=\"editable\"/>\n            </td>\n            <td  *ngIf=\"dataService.editMode\" class=\"skillColumn\">\n              <input type=\"text\" name=\"grade\" [(ngModel)]=\"qualification.grade\" class=\"editable\"/>\n            </td>\n            <td  *ngIf=\"dataService.editMode\" class=\"skillColumn\">\n              <mat-form-field class=\"editable\">\n                <textarea name=\"text\" matInput [(ngModel)]=\"qualification.notes\"></textarea>\n              </mat-form-field>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"removeQualification(i, j)\">\n                <mat-icon matTooltip=\"Remove qualification\">remove</mat-icon>\n              </a>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"moveQualificationUp(i, j)\">\n                <mat-icon matTooltip=\"Move up\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable': j <= 0 === true}\">keyboard_arrow_up</mat-icon>\n              </a>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"moveQualificationDown(i, j)\">\n                <mat-icon matTooltip=\"Move down\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable':j >= institution.qualifications.length - 1 === true}\">keyboard_arrow_down</mat-icon>\n              </a>\n            </td>\n          </tr>\n        </table>\n                \n      <a *ngIf=\"dataService.editMode\" (click)=\"addQualification(i)\">\n        <mat-icon matTooltip=\"Add new qualification\">add</mat-icon>\n      </a>\n\n      </mat-expansion-panel>\n\n    </mat-accordion>\n\n  </div>\n\n  <a *ngIf=\"dataService.editMode\" (click)=\"addInstitution()\">\n    <mat-icon matTooltip=\"Add new institution\" *ngIf=\"dataService.editMode\">add</mat-icon>\n  </a>\n\n  <br><br>\n  \n</div>\n\n<ng-template #noDetails>\n  No institutions provided.\n</ng-template>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-employment',\n  templateUrl: './cv-employment.component.html',\n  styleUrls: ['./cv-employment.component.scss']\n})\nexport class CvEmploymentComponent implements OnInit {\n\n  title = \"Employment\";\n  @Input() name;\n  @Input() text;\n  @Input() image;\n  @Input() employment;\n\n  @Output() textNotify = new EventEmitter<string>();\n  \n  updateText(text: string) {\n    this.text = text;\n    this.textNotify.emit(this.text);\n  }\n\n  addInstitution() {\n    this.employment.institutions.push({ institution: \"New institution\", roles: []} );\n    this.addRole(this.employment.institutions.length -1);\n  }\n\n  removeInstitution(i) {\n    if (this.employment.institutions.length == 1) {\n      this.employment.institutions[0] = { institution: \"New institution\", roles: [] };\n      this.addRole(0);\n    } else {\n      this.employment.institutions.splice(i, 1);\n    }\n  }\n\n  updateNote(note, i, j) {\n    this.employment.institutions[i].notes[j] = note;\n  }\n\n  addNote(i, j) {\n    this.employment.institutions[i].notes.splice(j + 1, 0, \"\");\n  }\n\n  removeNote(i, j) {\n    if (this.employment.institutions[i].notes.length == 1) {\n      this.employment.institutions[i].notes[0] = \"\";\n    } else {\n      this.employment.institutions[i].notes.splice(j, 1);\n    }\n  }\n \n  addRole(i) {\n    this.employment.institutions[i].roles.push({ notes: []});\n    this.addRoleNote(i, this.employment.institutions[i].roles.length - 1, 0);\n  }\n\n  removeRole(i, j) {\n    if (this.employment.institutions[i].roles.length == 1) {\n      this.employment.institutions[i].roles[0] = { notes: []};\n      this.addRoleNote(i, 0, 0);\n    } else {\n      this.employment.institutions[i].roles.splice(j, 1);\n    }\n  }\n\n  updateRoleNote(note, i, j, k) {\n    this.employment.institutions[i].roles[j].notes[k] = note;\n  }\n\n  addRoleNote(i, j, k) {\n    if (k ==0){\n      this.employment.institutions[i].roles[j].notes.push(\"\");\n    } else {\n      this.employment.institutions[i].roles[j].notes.splice(k + 1, 0, \"\");\n    }\n  }\n\n  removeRoleNote(i, j, k) {\n    if (this.employment.institutions[i].roles[j].notes.length == 1) {\n      this.employment.institutions[i].roles[j].notes[0] = \"\";\n    } else {\n      this.employment.institutions[i].roles[j].notes.splice(k, 1);\n    }\n  }\n\n  updateStartDate(i, date: Date) {\n    this.employment.institutions[i].startDate = date;\n  }\n\n  updateEndDate(i, date: Date) {\n    this.employment.institutions[i].endDate = date;\n  }\n \n  updateRoleStartDate(i, j, date: Date) {\n    this.employment.institutions[i].roles[j].startDate = date;\n  }\n\n  updateRoleEndDate(i, j, date: Date) {\n    this.employment.institutions[i].roles[j].endDate = date;\n  }\n \n  trackByFn(index: any, item: any) {\n    return index;\n  }\n\n  constructor(\n    public dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","<app-cv-heading\n  [title] = \"title\"\n  [name] = \"name\"\n  [text] = \"text\"\n  [image] = \"image\"\n  (textNotify) = \"updateText($event)\">\n</app-cv-heading>\n\n<h2>Employers:</h2>\n\n<div *ngIf=\"employment.institutions && employment.institutions[0]; else noDetails\" class=\"mat-accordion-div\">\n\n  <mat-accordion>\n\n    <mat-expansion-panel *ngFor=\"let institution of employment.institutions | orderByDate: 'startDate'; let i = index\">\n    \n      <mat-expansion-panel-header #panelH>\n        <mat-panel-title>\n          {{ institution.employer }}\n          <div class=\"dateLight\">\n            (\n            {{ institution.startDate | date:'dd-MM-yyyy' }}\n            -\n            {{ institution.endDate | date:'dd-MM-yyyy'}}\n            )\n          </div>\n        </mat-panel-title>\n        <mat-panel-description (click)=\"panelH._toggle()\">\n          <a (click)=\"removeInstitution(i)\">\n            <mat-icon matTooltip=\"Remove institution\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\">remove</mat-icon>\n          </a>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <div *ngIf=\"!dataService.editMode\">\n        <p>Start Date: {{ institution.startDate | date:'dd-MM-yyyy' }}</p>\n        <p *ngIf=\"institution.endDate\">End Date: {{ institution.endDate | date:'dd-MM-yyyy' }}</p>\n        <div *ngFor=\"let note of institution.notes\">\n          <p>{{ note }}</p>\n        </div>\n      </div>\n\n      <table *ngIf=\"dataService.editMode\" class=\"fullWidth\">\n        <colgroup>\n          <col span=\"1\" style=\"width: 20%;\">\n          <col span=\"1\" style=\"width: 2%;\">\n          <col span=\"1\" style=\"width: 78;\">\n        </colgroup>\n        <tr>\n          <td>Name</td>\n          <td>:</td>\n          <td>\n            <input type=\"text\" name=\"employer\" [(ngModel)]=\"institution.employer\" class=\"editable\"/>\n          </td>\n        </tr>\n        <tr>\n          <td>Start Date</td>\n          <td>:</td>\n          <td>\n            <app-datepicker\n              [date] = \"institution.startDate\"\n              (dateNotify) = \"updateStartDate(i, $event)\">\n            </app-datepicker>\n          </td>\n        </tr>\n        <tr>\n          <td>End Date</td>\n          <td>:</td>\n          <td>\n            <app-datepicker\n              [date] = \"institution.endDate\"\n              (dateNotify) = \"updateEndDate(i, $event)\">\n            </app-datepicker>\n          </td>\n        </tr>\n        <tr>\n          <td>Notes</td>\n          <td>:</td>\n          <td>\n            <div *ngFor=\"let note of institution.notes; let j = index; trackBy:trackByFn\">\n              <mat-form-field class=\"editable\">\n                <textarea name=\"text\" matInput [(ngModel)]=\"institution.notes[j]\" (change)=\"updateNote(note, i, j)\"></textarea>\n              </mat-form-field>\n              <a (click)=\"addNote(i, j)\">\n                <mat-icon *ngIf=\"dataService.editMode\">add</mat-icon>\n              </a>\n              <a (click)=\"removeNote(i, j)\">\n                <mat-icon *ngIf=\"dataService.editMode\">remove</mat-icon>\n              </a>\n            </div>\n            <br>\n          </td>\n        </tr>\n      </table>\n\n      <table class=\"fullWidth\">\n        <colgroup>\n          <col span=\"1\" style=\"width: 5%;\">\n          <col span=\"1\" style=\"width: 5%;\">\n          <col span=\"1\" style=\"width: 20%;\">\n          <col span=\"1\" style=\"width: 60%;\">\n          <col span=\"1\" style=\"width: 10%;\">\n        </colgroup>\n        <tr>\n          <th>Start Date</th>\n          <th>End Date</th>\n          <th>Title</th>\n          <th>Notes</th>\n          <th *ngIf=\"dataService.editMode\">Remove</th>\n          <th *ngIf=\"dataService.editMode\">Up</th>\n          <th *ngIf=\"dataService.editMode\">Down</th>\n        </tr>\n        <tr *ngFor=\"let role of institution.roles | orderByDate: 'startDate'; let j = index\">\n          <td *ngIf=\"!dataService.editMode\">{{ role.startDate | date:'dd-MM-yyyy' }}</td>\n          <td *ngIf=\"!dataService.editMode\">{{ role.endDate | date:'dd-MM-yyyy' }}</td>\n          <td *ngIf=\"!dataService.editMode\">{{ role.title }}</td>\n          <td *ngIf=\"!dataService.editMode\">\n            <div *ngFor=\"let note of role.notes\">\n              <p>{{ note }}</p>\n            </div>\n          <td *ngIf=\"dataService.editMode\">\n            <app-datepicker\n              [date] = \"role.startDate\"\n              (dateNotify) = \"updateRoleStartDate(i, j, $event)\">\n            </app-datepicker>\n          </td>\n          <td *ngIf=\"dataService.editMode\">\n            <app-datepicker\n              [date] = \"role.endDate\"\n              (dateNotify) = \"updateRoleEndDate(i, j, $event)\">\n            </app-datepicker>\n          </td>\n          <td  *ngIf=\"dataService.editMode\">\n            <input type=\"text\" name=\"title\" [(ngModel)]=\"role.title\" class=\"editable\"/>\n          </td>\n          <td  *ngIf=\"dataService.editMode\">\n            <div *ngFor=\"let note of role.notes; let k = index; trackBy:trackByFn\">\n              <mat-form-field class=\"editable\">\n                <textarea name=\"text\" matInput [(ngModel)]=\"role.notes[k]\" (change)=\"updateRoleNote(note, i, j, k)\"></textarea>\n              </mat-form-field>\n              <br>\n              <a (click)=\"addRoleNote(i, j, k)\">\n                <mat-icon *ngIf=\"dataService.editMode\">add</mat-icon>\n              </a>\n              <a (click)=\"removeRoleNote(i, j, k)\">\n                <mat-icon *ngIf=\"dataService.editMode\">remove</mat-icon>\n              </a>\n            </div>\n          </td>\n          <td *ngIf=\"dataService.editMode\">\n            <a (click)=\"removeRole(i, j)\">\n              <mat-icon matTooltip=\"Remove role\">remove</mat-icon>\n            </a>\n          </td>\n        </tr>\n      </table>\n              \n      <a *ngIf=\"dataService.editMode\" (click)=\"addRole(i)\">\n        <mat-icon matTooltip=\"Add new role\">add</mat-icon>\n      </a>\n\n    </mat-expansion-panel>\n\n  </mat-accordion>\n  \n  <a *ngIf=\"dataService.editMode\" (click)=\"addInstitution()\">\n    <mat-icon matTooltip=\"Add new institution\" *ngIf=\"dataService.editMode\">add</mat-icon>\n  </a>\n\n  <br><br>\n\n</div>\n\n<ng-template #noDetails>\n  No institutions provided.\n</ng-template>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-heading',\n  templateUrl: './cv-heading.component.html',\n  styleUrls: ['./cv-heading.component.scss']\n})\nexport class CvHeadingComponent implements OnInit {\n\n  @Input() name;\n  @Input() title;\n  @Input() text;\n  @Input() image;\n\n  @Output() textNotify = new EventEmitter<string>();\n\n  constructor(\n    public dataService: DataService\n  ) { }\n  \n  changeMessage() {\n    this.textNotify.emit(this.text);\n  }\n\n  ngOnInit() {\n  }\n\n}","  <div class=\"titleImg\">\n    <h2> {{ name }} </h2>\n    <img *ngIf=\"image\" src=\"{{'data:image/jpg;base64,' + image}}\" />\n    <p *ngIf=\"!image\">No image provided.</p>\n  </div>\n  <div class=\"titleText\">\n    <h2>{{ title }}</h2>\n    <br/>\n    <mat-form-field *ngIf=\"dataService.editMode\" class=\"editable\">\n      <textarea name=\"text\" matInput [(ngModel)]=\"text\" (keyup)=\"changeMessage()\"></textarea>\n    </mat-form-field>\n    <span *ngIf=\"!dataService.editMode\">{{ text }}</span>\n    <p *ngIf=\"!dataService.editMode && !text\">No details provided.</p>\n  </div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-cv-interests',\n  templateUrl: './cv-interests.component.html',\n  styleUrls: ['./cv-interests.component.scss']\n})\nexport class CvInterestsComponent implements OnInit {\n\n  title = \"Interests\";\n  @Input() name;\n  @Input() text;\n  @Input() image;\n  @Input() interests;\n\n  @Output() textNotify = new EventEmitter<string>();\n  \n  updateText(text: string) {\n    this.interests = text;\n    this.textNotify.emit(this.interests);\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<app-cv-heading\n  [title] = \"title\"\n  [name] = \"name\"\n  [text] = \"interests\"\n  [image] = \"image\"\n  (textNotify) = \"updateText($event)\">\n</app-cv-heading>","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport { Cv } from '../api/index';\n\n@Component({\n  selector: 'app-cv-json',\n  templateUrl: './cv-json.component.html',\n  styleUrls: ['./cv-json.component.scss']\n})\nexport class CvJsonComponent implements OnInit {\n\n  cv: Cv;\n  cvJson: string;\n\n  constructor(\n    private dialogRef: MatDialogRef<CvJsonComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.cv = data;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.cvJson = JSON.stringify(this.cv, null, 2);\n  }\n\n}\n","<h2 mat-dialog-title>\n  CV JSON data for {{ cv.name }}\n</h2>\n<mat-dialog-content>\n  <textarea readonly [(ngModel)] = \"cvJson\"></textarea>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button [cdkCopyToClipboard]=\"cvJson\" class=\"mat-raised-button\">Copy to clipboard</button>\n  <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { CvService } from '../api/index'\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-list',\n  templateUrl: './cv-list.component.html',\n  styleUrls: ['./cv-list.component.scss']\n})\nexport class CvListComponent implements OnInit {\n\n  cvList;\n  nameFilter;\n  summaryFilter;\n\n  constructor(\n    private cvService: CvService,\n    private route: ActivatedRoute,\n    public dataService: DataService\n  ) {\n  }\n\n  onKeyName(event: any) {\n    this.nameFilter = event.target.value;\n  }\n\n  onKeySummary(event: any) {\n    this.summaryFilter = event.target.value;\n  }\n\n  filter(item: any, args: string[]) {\n    return item == null || args[1] == null || item[args[0]] != null && item[args[0]].toUpperCase( ).includes(args[1].toUpperCase( ));\n  }\n\n  ngOnInit() {\n    this.cvList = this.cvService.getAllCVs();\n    this.route.paramMap.subscribe(params => {\n        this.dataService.unsetCv();\n    });\n  }\n\n}\n","<br><br>\n<p>Please select from the following list of available CVs:</p>\n\n<table>\n    <tr>\n      <th class=\"nameWidth\">Name</th>\n      <th>Summary</th>\n    </tr>\n    <tr>\n      <td>\n        <input (keyup)=\"onKeyName($event)\" placeholder=\"Filter name ...\">\n      </td>\n      <td>\n        <input (keyup)=\"onKeySummary($event)\" placeholder=\"Filter summary text ...\">\n      </td>\n    </tr>\n    <tr *ngFor=\"let cv of cvList | async | callback: filter:'name':nameFilter | callback: filter:'oneLineSummary':summaryFilter | orderBy: 'name'\">\n      <td>\n        <a [title]=\"cv.name + '\\'s CV'\" [routerLink]=\"['/cvs', cv.name]\">{{ cv.name }}</a>\n      </td>\n      <td>\n        <a [title]=\"cv.name + '\\'s CV'\" [routerLink]=\"['/cvs', cv.name]\">{{ cv.oneLineSummary }}</a>\n      </td>\n    </tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef} from \"@angular/material/dialog\";\nimport { AuthenticationService } from '../authentication.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-cv-login',\n  templateUrl: './cv-login.component.html',\n  styleUrls: ['./cv-login.component.scss']\n})\nexport class CvLoginComponent implements OnInit {\n\n  loginError = false;\n  loginForm;\n\n  constructor(\n    private dialogRef: MatDialogRef<CvLoginComponent>,\n    public authenticationService: AuthenticationService,\n    private formBuilder: FormBuilder\n  ) {\n    this.loginForm = this.formBuilder.group({\n      userName: '',\n      userPassword: ''\n    });\n  }\n\n  login(loginFormData) {\n    this.authenticationService.login(loginFormData.userName, loginFormData.userPassword);\n  }\n\n  close() {\n    this.loginError = false;\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.authenticationService.getAuthenticationEventEmitter().subscribe((authenticated) => {\n      if (authenticated) {\n        this.close();\n      } else {\n        this.loginError = true;\n      }\n    });\n  }\n\n}\n","<h2 mat-dialog-title>\n  Login to the CV Viewer to make changes.\n</h2>\n<mat-dialog-content>\n  <div class=\"fullWidth\">\n    <div class=\"floatLeft\" style = \"width: 80%\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\n        <table>\n          <colgroup>\n            <col span=\"1\" style=\"width: 30%;\">\n            <col span=\"1\" style=\"width: 2%;\">\n            <col span=\"1\" style=\"width: 68%;\">\n          </colgroup>\n          <tr>\n            <td>User name</td>\n            <td>:</td>\n            <td>\n              <input id=\"userName\" type=\"text\" name=\"userName\" formControlName=\"userName\" class=\"editable\">\n            </td>\n          </tr>\n          <tr>\n            <td>Password</td>\n            <td>:</td>\n            <td>\n              <input id=\"userPassword\" type=\"password\" name=\"userPassword\" formControlName=\"userPassword\" class=\"editable\">\n            </td>\n          </tr>\n        </table>\n        <p [ngClass]=\"{'errorMessage clearBoth':loginError, 'clearBoth':!loginError }\">Enter valid user name and password.</p>\n        <button type=\"submit\" class=\"mat-raised-button\">Login</button>\n        <button type=\"button\" class=\"mat-raised-button\" (click)=\"close()\">Close</button>\n      </form>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<!--<mat-dialog-actions>-->\n<!--  <form (ngSubmit)=\"login()\">-->\n<!--    <button value=\"login\" type=\"submit\" class=\"mat-raised-button\" (click)=\"login()\">Login</button>-->\n<!--    <button value=\"close\" type=\"button\" class=\"mat-raised-button\" (click)=\"close()\">Close</button>-->\n<!--  </form>-->\n<!--</mat-dialog-actions>-->\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-skills',\n  templateUrl: './cv-skills.component.html',\n  styleUrls: ['./cv-skills.component.scss']\n})\nexport class CvSkillsComponent implements OnInit {\n\n  title = \"Skills\";\n  @Input() name;\n  @Input() text;\n  @Input() image;\n  @Input() skills;\n\n  @Output() textNotify = new EventEmitter<string>();\n\n  updateText(text: string) {\n    this.text = text;\n    this.textNotify.emit(this.text);\n  }\n\n  reSequenceSkillsGroup() {\n    var index = 0;\n    this.skills.skillGroups.forEach( (skillGroup) => { skillGroup.seq = index++ } );\n  }\n\n  addSkillGroup() {\n    this.skills.skillGroups.push({ heading: \"New skill group\", skillSet: [{}]} );\n    this.reSequenceSkillsGroup();\n  }\n\n  removeSkillGroup(i) {\n    if (this.skills.skillGroups.length == 1) {\n      this.skills.skillGroups[0] = { heading: \"New skill group\", skillSet: [{}] };\n    } else {\n      this.skills.skillGroups.splice(i, 1);\n    }\n    this.reSequenceSkillsGroup();\n  }\n\n  moveSkillGroupUp(i) {\n    this.skills.skillGroups.splice(i - 1, 0, this.skills.skillGroups.splice(i, 1)[0]);\n    this.reSequenceSkillsGroup();\n  }\n\n  moveSkillGroupDown(i) {\n    this.skills.skillGroups.splice(i + 1, 0, this.skills.skillGroups.splice(i, 1)[0]);\n    this.reSequenceSkillsGroup();\n  }\n\n  reSequenceSkills(i) {\n    var index = 0;\n    this.skills.skillGroups[i].skillSet.forEach( (skill) => { skill.seq = index++ } );\n  }\n\n  addSkill(i) {\n    this.skills.skillGroups[i].skillSet.push({});\n    this.reSequenceSkills(i);\n  }\n\n  removeSkill(i, j) {\n    if (this.skills.skillGroups[i].skillSet.length == 1) {\n      this.skills.skillGroups[i].skillSet[0] = {};\n    } else {\n      this.skills.skillGroups[i].skillSet.splice(j, 1);\n    }\n    this.reSequenceSkills(i);\n  }\n\n  moveSkillUp(i, j) {\n    this.skills.skillGroups[i].skillSet.splice(j - 1, 0, this.skills.skillGroups[i].skillSet.splice(j, 1)[0]);\n    this.reSequenceSkills(i);\n  }\n\n  moveSkillDown(i, j) {\n    this.skills.skillGroups[i].skillSet.splice(j + 1, 0, this.skills.skillGroups[i].skillSet.splice(j, 1)[0]);\n    this.reSequenceSkills(i);\n  }\n\n  constructor(\n    public dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-cv-heading\n  [title] = \"title\"\n  [name] = \"name\"\n  [text] = \"text\"\n  [image] = \"image\"\n  (textNotify) = \"updateText($event)\">\n</app-cv-heading>\n\n<h2>Skill groups:</h2>\n\n<div *ngIf=\"skills.skillGroups && skills.skillGroups[0]; else noDetails\">\n\n  <div class=\"mat-accordion-div\">\n      \n    <mat-accordion>\n\n      <mat-expansion-panel *ngFor=\"let skillGroup of skills.skillGroups | orderBy: 'seq'; let i = index\">\n      \n        <mat-expansion-panel-header #panelH>\n          <mat-panel-title>\n            {{ skillGroup.heading }}\n          </mat-panel-title>\n          <mat-panel-description (click)=\"panelH._toggle()\">\n            <a (click)=\"removeSkillGroup(i)\">\n              <mat-icon matTooltip=\"Remove skill group\" *ngIf=\"dataService.editMode\">remove</mat-icon>\n            </a>\n            <a (click)=\"moveSkillGroupUp(i)\">\n              <mat-icon matTooltip=\"Move up\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable': i <= 0 === true}\">keyboard_arrow_up</mat-icon>\n            </a>\n            <a (click)=\"moveSkillGroupDown(i)\">\n              <mat-icon matTooltip=\"Move down\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable':i >= skills.skillGroups.length - 1 === true}\">keyboard_arrow_down</mat-icon>\n            </a>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <br>\n\n        <table *ngIf=\"dataService.editMode\">\n          <colgroup>\n            <col span=\"1\" style=\"width: 20%;\">\n            <col span=\"1\" style=\"width: 2%;\">\n            <col span=\"1\" style=\"width: 78;\">\n          </colgroup>\n          <tr>\n            <td>Skill Group</td>\n            <td>:</td>\n            <td>\n              <input type=\"text\" name=\"skillGroup\" [(ngModel)]=\"skillGroup.heading\" class=\"editable\"/>\n            </td>\n          </tr>\n        </table>\n        \n        <table class=\"fullWidth\">\n          <colgroup>\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 60%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n            <col span=\"1\" style=\"width: 10%;\">\n          </colgroup>\n          <tr>\n            <th>Type</th>\n            <th>Experience (years)</th>\n            <th *ngIf=\"!dataService.editMode\">Ability</th>\n            <th *ngIf=\"dataService.editMode\">Ability (Out of 10)</th>\n            <th>Notes</th>\n            <th *ngIf=\"dataService.editMode\">Remove</th>\n            <th *ngIf=\"dataService.editMode\">Up</th>\n            <th *ngIf=\"dataService.editMode\">Down</th>\n          </tr>\n          <tr *ngFor=\"let skill of skillGroup.skillSet | orderBy: 'seq'; let j = index\">\n            <td *ngIf=\"!dataService.editMode\">{{ skill.type }}</td>\n            <td *ngIf=\"!dataService.editMode\" class=\"centre\">{{ skill.experience }}</td>\n            <td *ngIf=\"!dataService.editMode\" class=\"tdNoWrap centre\">\n              <app-cv-stars\n                [inputLevel] = \"skill.ability\"\n                [inputMax] = 10>\n              </app-cv-stars>\n            </td>\n            <td *ngIf=\"!dataService.editMode\">{{ skill.notes }}</td>\n            <td *ngIf=\"dataService.editMode\">\n              <input type=\"text\" name=\"type\" [(ngModel)]=\"skill.type\" class=\"editable\"/>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <input type=\"number\"  step=\"0.5\" min=\"0\" name=\"experience\" [(ngModel)]=\"skill.experience\" class=\"editable\"/>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <input type=\"number\"  step=\"0.5\" max=\"10\" min=\"0\" name=\"ability\" [(ngModel)]=\"skill.ability\" class=\"editable\"/>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <mat-form-field class=\"editable\">\n                <textarea name=\"text\" matInput [(ngModel)]=\"skill.notes\"></textarea>\n              </mat-form-field>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"removeSkill(i, j)\">\n                <mat-icon matTooltip=\"Remove skill\">remove</mat-icon>\n              </a>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"moveSkillUp(i, j)\">\n                <mat-icon matTooltip=\"Move up\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable': j <= 0 === true}\">keyboard_arrow_up</mat-icon>\n              </a>\n            </td>\n            <td *ngIf=\"dataService.editMode\">\n              <a (click)=\"moveSkillDown(i, j)\">\n                <mat-icon matTooltip=\"Move down\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable':j >= skillGroup.skillSet.length - 1 === true}\">keyboard_arrow_down</mat-icon>\n              </a>\n            </td>\n          </tr>\n        </table>\n                \n        <a *ngIf=\"dataService.editMode\" (click)=\"addSkill(i)\">\n          <mat-icon matTooltip=\"Add new skill\">add</mat-icon>\n        </a>\n\n      </mat-expansion-panel>\n\n    </mat-accordion>\n\n  </div>\n\n  <a *ngIf=\"dataService.editMode\" (click)=\"addSkillGroup()\">\n    <mat-icon matTooltip=\"Add new skill group\" *ngIf=\"dataService.editMode\">add</mat-icon>\n  </a>\n\n  <br><br>\n  \n</div>\n\n<ng-template #noDetails>\n  No skill groups provided.\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cv-stars',\n  templateUrl: './cv-stars.component.html',\n  styleUrls: ['./cv-stars.component.scss']\n})\nexport class CvStarsComponent implements OnInit {\n\n  @Input() inputLevel;\n  @Input() inputMax;\n  @Input() count = 5;\n  level;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.level = this.count * this.inputLevel / this.inputMax;\n  }\n\n}","<div *ngFor=\"let item of [].constructor(count); let i = index\">\n  <mat-icon class=\"icon\" [inline]=\"true\" *ngIf=\"level < (i + 0.5)\">star_border</mat-icon>\n  <mat-icon class=\"icon\" [inline]=\"true\" *ngIf=\"(i + 0.5) <= level && level < (i + 1)\">star_half</mat-icon>\n  <mat-icon class=\"icon\" [inline]=\"true\" *ngIf=\"level >= (i + 1)\">star</mat-icon>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv-summary',\n  templateUrl: './cv-summary.component.html',\n  styleUrls: ['./cv-summary.component.scss']\n})\nexport class CvSummaryComponent implements OnInit {\n\n  title = \"Summary\";\n  @Input() name;\n  @Input() text;\n  @Input() image;\n  @Input() header;\n\n  @Output() textNotify = new EventEmitter<string>();\n\n  datePicker;\n\n  updateDate(date: Date) {\n    this.header.dateOfBirth = date;\n  }\n  \n  updateText(text: string) {\n    this.text = text;\n    this.textNotify.emit(this.text);\n  }\n\n  updateAddressLine(addressLine, i) {\n    this.header.addressLines[i] = addressLine;\n  }\n\n  addAddressLine(i) {\n    this.header.addressLines.splice(i + 1, 0, \"\");\n  }\n\n  removeAddressLine(i) {\n    if (this.header.addressLines.length == 1) {\n      this.header.addressLines[0] = \"\";\n    } else {\n      this.header.addressLines.splice(i, 1);\n    }\n  }\n\n  updateStartDate(i, date: Date) {\n    this.header.recentWork[i].startDate = date;\n  }\n\n  updateEndDate(i, date: Date) {\n    this.header.recentWork[i].endDate = date;\n  }\n\n  updateRole(role, i, j) {\n    this.header.recentWorkExperience[i].roles[j] = role;\n  }\n\n  addRole(i, j) {\n    this.header.recentWorkExperience[i].roles.splice(j + 1, 0, \"\");\n  }\n\n  removeRole(i, j) {\n    if (this.header.recentWorkExperience[i].roles.length == 1) {\n      this.header.recentWorkExperience[i].roles[0] = \"\";\n    } else {\n      this.header.recentWorkExperience[i].roles.splice(j, 1);\n    }\n  }\n\n  addSkill() {\n    this.header.keySkills.push({});\n  }\n\n  removeSkill(i) {\n    if (this.header.keySkills.length == 1) {\n      this.header.keySkills[0] = \"\";\n    } else {\n      this.header.keySkills.splice(i, 1);\n    }\n  }\n\n  moveSkillUp(i) {\n    this.header.keySkills.splice(i - 1, 0, this.header.keySkills.splice(i, 1)[0]);\n  }\n\n  moveSkillDown(i) {\n    this.header.keySkills.splice(i + 1, 0, this.header.keySkills.splice(i, 1)[0]);\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n  \n  constructor(\n    public dataService: DataService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","<app-cv-heading\n  [title] = \"title\"\n  [name] = \"name\"\n  [text] = \"text\"\n  [image] = \"image\"\n  (textNotify) = \"updateText($event)\">\n</app-cv-heading>\n\n<br>\n\n<div class=\"fullWidth\">\n    \n  <div class=\"floatLeft\" style = \"width: 40%\">\n    <table>\n      <colgroup>\n        <col span=\"1\" style=\"width: 30%;\">\n        <col span=\"1\" style=\"width: 2%;\">\n        <col span=\"1\" style=\"width: 68%;\">\n      </colgroup>\n      <tr>\n        <td>Date of Birth</td>\n        <td>:</td>\n        <td>\n          <app-datepicker\n            [date] = \"header.dateOfBirth\"\n            (dateNotify) = \"updateDate($event)\">\n          </app-datepicker>\n        </td>\n      </tr>\n      <tr>\n        <td>Current Position</td>\n        <td>:</td>\n        <td>\n          <input *ngIf=\"dataService.editMode\" type=\"text\" name=\"currentPosition\" [(ngModel)]=\"header.currentPosition\" class=\"editable\"/>\n          <span *ngIf=\"!dataService.editMode\">{{header.currentPosition}}</span>\n        </td>\n      </tr>\n      <tr>\n        <td>Nationality</td>\n        <td>:</td>\n        <td>\n          <input *ngIf=\"dataService.editMode\" type=\"text\" name=\"nationality\" [(ngModel)]=\"header.nationality\" class=\"editable\"/>\n          <span *ngIf=\"!dataService.editMode\">{{header.nationality}}</span>\n        </td>\n      </tr>\n      <tr>\n        <td>Marital Status</td>\n        <td>:</td>\n        <td>\n          <input *ngIf=\"dataService.editMode\" type=\"text\" name=\"maritalStatus\" [(ngModel)]=\"header.maritalStatus\" class=\"editable\"/>\n          <span *ngIf=\"!dataService.editMode\">{{header.maritalStatus}}</span>\n        </td>\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"floatRight\" style = \"width: 60%\">\n    <table class=\"fullWidth\">\n      <colgroup>\n        <col span=\"1\" style=\"width: 20%;\">\n        <col span=\"1\" style=\"width: 2%;\">\n        <col span=\"1\" style=\"width: 78%;\">\n      </colgroup>\n      <tr>\n        <td>Address</td>\n        <td>:</td>\n        <td>\n          <div *ngFor=\"let addressLine of header.addressLines; let i = index; trackBy:trackByFn\">\n            <input *ngIf=\"dataService.editMode\"\n                  type=\"text\"\n                  name=\"addressLine\"\n                  [(ngModel)]=\"header.addressLines[i]\"\n                  class=\"editable\"\n                  (change)=\"updateAddressLine(addressLine, i)\"\n                  style=\"width:80%\"/>\n            <a (click)=\"addAddressLine(i)\">\n              <mat-icon *ngIf=\"dataService.editMode\">add</mat-icon>\n            </a>\n            <a (click)=\"removeAddressLine(i)\">\n              <mat-icon *ngIf=\"dataService.editMode\">remove</mat-icon>\n            </a>\n            <span *ngIf=\"!dataService.editMode\">{{ addressLine }}</span>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td>E-Mail Address</td>\n        <td>:</td>\n        <td>\n          <input *ngIf=\"dataService.editMode\" type=\"email\" name=\"emailAddress\" [(ngModel)]=\"header.emailAddress\" class=\"editable\"/>\n          <span *ngIf=\"!dataService.editMode\">{{header.emailAddress}}</span>\n        </td>\n      </tr>\n      <tr>\n        <td>Mobile Phone</td>\n        <td>:</td>\n        <td>\n          <input *ngIf=\"dataService.editMode\" type=\"tel\" name=\"phoneMobile\" [(ngModel)]=\"header.phoneMobile\" class=\"editable\"/>\n          <span *ngIf=\"!dataService.editMode\">{{header.phoneMobile}}</span>\n        </td>\n      </tr>\n    </table>\n  </div>\n\n  <div class=\"clearBoth\" style=\"width:90%\">\n\n    <h3>Recent Work Experience</h3>\n\n    <div *ngFor=\"let recentWork of header.recentWorkExperience; let i = index\">\n\n      <table *ngIf=\"dataService.editMode\" class=\"fullWidth\">\n        <colgroup>\n          <col span=\"1\" style=\"width: 20%;\">\n          <col span=\"1\" style=\"width: 2%;\">\n          <col span=\"1\" style=\"width: 78;\">\n        </colgroup>\n        <tr>\n          <td>Name</td>\n          <td>:</td>\n          <td>\n            <input type=\"text\" name=\"name\" [(ngModel)]=\"recentWork.employer\" class=\"editable\"/>\n          </td>\n        </tr>\n        <tr>\n          <td>Start Date</td>\n          <td>:</td>\n          <td *ngIf=\"dataService.editMode\">\n            <app-datepicker\n              [date] = \"recentWork.startDate\"\n              (dateNotify) = \"updateStartDate(i, $event)\">\n            </app-datepicker>\n          </td>\n        </tr>\n        <tr>\n          <td>End Date</td>\n          <td>:</td>\n          <td *ngIf=\"dataService.editMode\">\n            <app-datepicker\n              [date] = \"recentWork.endDate\"\n              (dateNotify) = \"updateEndDate(i, $event)\">\n            </app-datepicker>\n          </td>\n        </tr>\n      </table>\n      \n      <div *ngIf=\"!dataService.editMode\" class=\"fullWidth\">\n        <div>\n          <div class=\"floatLeft boldText\">{{ recentWork.employer }}</div>\n          <div class=\"dateLight floatLeft\">\n            (\n            {{ recentWork.startDate | date:'dd-MM-yyyy' }}\n            -\n            {{ recentWork.endDate | date:'dd-MM-yyyy'}}\n            )\n          </div>\n          <br>\n          <p class=\"clearBoth\">{{ recentWork.notes }}</p>\n        </div>\n      </div>\n\n      <mat-form-field  *ngIf=\"dataService.editMode\" class=\"editable\">\n        <textarea name=\"text\" matInput [(ngModel)]=\"recentWork.notes\"></textarea>\n      </mat-form-field>\n\n      <h4>Roles and Responsibilities:</h4>\n      <div *ngFor=\"let role of recentWork.roles; let j = index; trackBy:trackByFn\">\n        <input *ngIf=\"dataService.editMode\"\n              type=\"text\"\n              name=\"role\"\n              [(ngModel)]=\"recentWork.roles[j]\"\n              class=\"editable\"\n              (change)=\"updateRole(role, i, j)\"\n              style=\"width:80%\"/>\n        <a (click)=\"addRole(i, j)\">\n          <mat-icon *ngIf=\"dataService.editMode\">add</mat-icon>\n        </a>\n        <a (click)=\"removeRole(i, j)\">\n          <mat-icon *ngIf=\"dataService.editMode\">remove</mat-icon>\n        </a>\n        <span *ngIf=\"!dataService.editMode\">* {{ role }};</span>\n      </div>\n\n      <br><br>\n\n    </div>\n        \n    <h3>Key Skills and Competencies</h3>\n\n    <table class=\"fullWidth alignLeft\">\n      <colgroup>\n        <col span=\"1\" style=\"width: 5%;\">\n        <col span=\"1\" style=\"width: 70%;\">\n      </colgroup>\n      <tr>\n        <th *ngIf=\"!dataService.editMode\">Ability</th>\n        <th *ngIf=\"dataService.editMode\">Ability (Out of 10)</th>\n        <th>Skill</th>\n        <th *ngIf=\"dataService.editMode\">Remove</th>\n        <th *ngIf=\"dataService.editMode\">Up</th>\n        <th *ngIf=\"dataService.editMode\">Down</th>\n      </tr>\n      <tr *ngFor=\"let skill of header.keySkills; let i = index\">\n        <td *ngIf=\"dataService.editMode\">\n          <input type=\"number\"  step=\"0.5\" max=\"10\" min=\"0\" name=\"ability\" [(ngModel)]=\"skill.ability\" class=\"editable\"/>\n        </td>\n        <td *ngIf=\"!dataService.editMode\" class=\"tdNoWrap centre\">\n          <app-cv-stars\n            [inputLevel] = \"skill.ability\"\n            [inputMax] = 10>\n          </app-cv-stars>\n        </td>\n        <td *ngIf=\"!dataService.editMode\">{{ skill.skill }}</td>\n        <td *ngIf=\"dataService.editMode\">\n          <input type=\"text\" name=\"skill\" [(ngModel)]=\"skill.skill\" class=\"editable\"/>\n        </td>\n        <td *ngIf=\"dataService.editMode\" class=\"centre\">\n          <a (click)=\"removeSkill(i)\">\n            <mat-icon matTooltip=\"Remove skill\">remove</mat-icon>\n          </a>\n        </td>\n        <td *ngIf=\"dataService.editMode\" class=\"centre\">\n          <a (click)=\"moveSkillUp(i)\">\n            <mat-icon matTooltip=\"Move up\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable': i <= 0 === true}\">keyboard_arrow_up</mat-icon>\n          </a>\n        </td>\n        <td *ngIf=\"dataService.editMode\" class=\"centre\">\n          <a (click)=\"moveSkillDown(i)\">\n            <mat-icon matTooltip=\"Move down\" aria-hidden=\"false\" *ngIf=\"dataService.editMode\" [ngClass]=\"{'disable':i >= header.keySkills.length - 1 === true}\">keyboard_arrow_down</mat-icon>\n          </a>\n        </td>\n      </tr>\n    </table>\n            \n    <a *ngIf=\"dataService.editMode\" (click)=\"addSkill()\">\n      <mat-icon matTooltip=\"Add new skill\">add</mat-icon>\n    </a>\n    <br><br>\n\n  </div>\n\n</div>","import { Component, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Cv } from '../api/index';\nimport { CvService } from '../api/index'\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cv',\n  templateUrl: './cv.component.html',\n  styleUrls: ['./cv.component.scss']\n})\nexport class CvComponent implements OnInit {\n\n  cv: Cv;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cvService: CvService,\n    public dataService: DataService\n  ) { }\n\n  updateSummaryText(text: string) {\n    this.cv.summary = text;\n  }\n\n  updateEducationText(text: string) {\n    this.cv.education.notes = text;\n  }\n\n  updateSkillsText(text: string) {\n    this.cv.skills.notes = text;\n  }\n\n  updateEmploymentText(text: string) {\n    this.cv.employment.notes = text;\n  }\n\n  updateInterestsText(text: string) {\n    this.cv.interests = [];\n    this.cv.interests.push(text);\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.cvService.getCvByName(params.get('cvName')).subscribe((cv) => {\n        this.cv = cv;\n        this.dataService.setCv(this.cv);\n      });\n    });\n  }\n\n}\n","<div id=\"main-content\">\n  <mat-tab-group>\n    <mat-tab>\n      <ng-template mat-tab-label>Summary</ng-template>\n      <div class=\"mat-tab-content\">\n        <app-cv-summary\n          [name] = \"cv.name\"\n          [text] = \"cv.summary\"\n          [image] = \"cv.image\"\n          [header] = \"cv.header\"\n          (textNotify) = \"updateSummaryText($event)\">\n        </app-cv-summary>\n      </div>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>Education</ng-template>\n      <div class=\"mat-tab-content\">\n        <app-cv-education\n          [name] = \"cv.name\"\n          [text] = \"cv.education.notes\"\n          [image] = \"cv.image\"\n          [education] = \"cv.education\"\n          (textNotify) = \"updateEducationText($event)\">\n        </app-cv-education>\n      </div>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>Skills</ng-template>\n      <div class=\"mat-tab-content\">\n        <app-cv-skills\n          [name] = \"cv.name\"\n          [text] = \"cv.skills.notes\"\n          [image] = \"cv.image\"\n          [skills] = \"cv.skills\"\n          (textNotify) = \"updateSkillsText($event)\">\n        </app-cv-skills>\n      </div>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>Employment</ng-template>\n      <div class=\"mat-tab-content\">\n        <app-cv-employment\n          [name] = \"cv.name\"\n          [text] = \"cv.employment.notes\"\n          [image] = \"cv.image\"\n          [employment] = \"cv.employment\"\n          (textNotify) = \"updateEmploymentText($event)\">\n        </app-cv-employment>\n      </div>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>Interests</ng-template>\n      <div class=\"mat-tab-content\">\n        <app-cv-interests\n          [name] = \"cv.name\"\n          [text] = \"cv.summary\"\n          [image] = \"cv.image\"\n          [interests] = \"cv.interests\"\n          (textNotify) = \"updateInterestsText($event)\">\n        </app-cv-interests>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n\n<app-cv-bottom-bar\n  [footnote] = \"cv.footnote\"\n  [sourceURL] = \"cv.sourceURL\">\n</app-cv-bottom-bar>","import { Injectable, ViewContainerRef } from '@angular/core';\nimport { Cv } from './api/index';\nimport { CvService } from './api/index'\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { CvJsonComponent } from './cv-json/cv-json.component';\n\n@Injectable()\nexport class DataService {\n\n  public editMode: boolean = false;\n  cv: Cv;\n\n\n  constructor(\n      private cvService: CvService,\n      private dialog: MatDialog\n  ) { }\n\n  switchMode() {\n    this.editMode = !this.editMode;\n  }\n\n  setEditOff() {\n    this.editMode = false;\n  }\n\n  hasCv() {\n    return this.cv != null;\n  }\n\n  setCv(cv: Cv) {\n    this.cv = cv;\n  }\n\n  unsetCv() {\n    this.setCv(null);\n    this.editMode = false;\n  }\n\n  copyCv() {\n    this.openDialog();\n  }\n\n  saveCv() {\n    this.cvService.putCv(this.cv).subscribe(response => {});\n    this.editMode = false;\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = \"600px\";\n    dialogConfig.width = \"1000px\";\n    dialogConfig.data = this.cv;\n    this.dialog.open(CvJsonComponent, dialogConfig);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderByDate'\n})\nexport class OrderByDatePipe implements PipeTransform {\n\n  transform(array: any, prop: any): any {\n    return array == null ? array : array.sort((a, b) => new Date(a[prop]) < new Date(b[prop]) ? 1 : new Date(a[prop]) === new Date(b[prop]) ? 0 : -1);\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderByPipe implements PipeTransform {\n\n  transform(array: any, prop: any): any {\n    return array == null ? array : array.sort((a, b) => a[prop] > b[prop] ? 1 : a[prop] === b[prop] ? 0 : -1);\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { DataService } from '../data.service'\nimport { AuthenticationService } from '../authentication.service'\nimport { CvLoginComponent } from '../cv-login/cv-login.component';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(\n    public dataService: DataService,\n    public authenticationService: AuthenticationService,\n    private dialog: MatDialog\n  ) { }\n\n  switchMode() {\n    this.dataService.switchMode();\n  }\n\n  copyCv() {\n    this.dataService.copyCv();\n  }\n\n  saveCv() {\n    this.dataService.saveCv();\n  }\n\n  login() {\n    this.openDialog();\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.dataService.setEditOff();\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = \"220px\";\n    dialogConfig.width = \"450px\";\n    this.dialog.open(CvLoginComponent, dialogConfig);\n  }\n\n}\n","<div class=\"topBar\">\n  <div class=\"topBarText\">\n    <a [routerLink]=\"['/']\">\n      <h1>CV Viewer</h1>\n    </a>\n  </div>\n  <a [routerLink]=\"['/']\">\n    <mat-icon matTooltip=\"Home - show CV list\" aria-hidden=\"false\">home</mat-icon>\n  </a>\n  <a *ngIf=\"!authenticationService.authenticated\" (click)=\"login()\">\n    <mat-icon matTooltip=\"Login\" aria-hidden=\"false\" class=\"loggedOut\">face</mat-icon>\n  </a>\n  <a *ngIf=\"authenticationService.authenticated\" (click)=\"logout()\">\n    <mat-icon matTooltip='{{authenticationService.userName}} - Logout' aria-hidden=\"false\">face</mat-icon>\n  </a>\n  <a *ngIf=\"dataService.hasCv() && authenticationService.authenticated\" (click)=\"switchMode()\">\n    <mat-icon matTooltip=\"Toggle edit mode\" aria-hidden=\"false\">edit</mat-icon>\n  </a>\n  <a *ngIf=\"dataService.editMode && authenticationService.authenticated\" (click)=\"saveCv()\">\n    <mat-icon matTooltip=\"Save CV\" aria-hidden=\"false\">save</mat-icon>\n  </a>\n  <a *ngIf=\"dataService.editMode && authenticationService.authenticated\" (click)=\"copyCv()\">\n    <mat-icon matTooltip=\"Copy CV JSON\" aria-hidden=\"false\">content_copy</mat-icon>\n  </a>\n</div>\n","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherwise, log the boot error\n}).catch(err => console.error(err));","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\n// import 'core-js/es6/reflect';\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`."],"sourceRoot":"webpack:///"}