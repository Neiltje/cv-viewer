swagger: "2.0"
info:
  description: "CV Viewer."
  version: "1.0.0"
  title: "CV Viewer"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "neilje123@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: "localhost:9090"
host: "www.cv-viewer.co.uk"
#host: "cvviewer-env.eba-7nm3cfp2.eu-west-2.elasticbeanstalk.com"
tags:
  - name: "user"
    description: "Everything about users"
  - name: "cv"
    description: "Everything about CVs"
schemes:
  - "https"
securityDefinitions:
  basicAuth:
    type: basic

paths:
  /user:
    post:
      tags:
        - "user"
      summary: "Create a new user"
      description: "User create"
      operationId: createUser
      security:
        - basicAuth: []
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string

  /user/getAllUserNames:
    get:
      tags:
        - "user"
      summary: "Get all users"
      description: "User get"
      operationId: getAllUserNames
      security:
        - basicAuth: []
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Invalid status value"
          schema:
            type: string

  /user/roles:
    post:
      tags:
        - "user"
      summary: "Update roles for a user"
      description: "User roles"
      operationId: updateUserRoles
      security:
        - basicAuth: []
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          required: true
          schema:
            $ref: "#/definitions/userRoles"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string

  /user/password:
    post:
      tags:
        - "user"
      summary: "Update password for a user"
      description: "User password"
      operationId: updateUserPassword
      security:
        - basicAuth: []
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          required: true
          schema:
            $ref: "#/definitions/userPassword"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string

  /user/{userName}:
    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "User delete"
      operationId: deleteUser
      security:
        - basicAuth: []
      parameters:
        - in: "path"
          name: "userName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string

  /user/getUserRoles:
    get:
      tags:
        - "user"
      summary: "Get the roles for a user"
      description: "Get user roles"
      operationId: getUserRoles
      security:
        - basicAuth: []
      parameters:
        - in: "query"
          name: "userName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation returns roles"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Invalid status value"

  /user/login/{userName}:
    post:
      tags:
        - "user"
      summary: "Login to CV Viewer for updates"
      description: "Login"
      operationId: login
      security:
        - basicAuth: []
      parameters:
        - in: "path"
          name: "userName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation returns roles"
          schema:
            type: "array"
            items:
              type: "string"
        "400":
          description: "Invalid status value"

  /cv:
    post:
      tags:
        - "cv"
      summary: "Write or update a CV"
      description: "Write or update a CV"
      operationId: postCv
      produces:
        - "application/json"
      consumes:
        - "application/json"
      security:
        - basicAuth: []
      parameters:
        - in: "body"
          name: "cv"
          required: true
          schema:
            $ref: "#/definitions/cv"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string
        "500":
          description: "Internal Server Error"
          schema:
            type: string

  /cv/{cvName}:
    get:
      tags:
        - "cv"
      summary: "Get CV by name"
      description: "Get a CV defined on the system by name"
      operationId: getCvByName
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "cvName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/cv"
        "400":
          description: "Invalid status value"
    delete:
      tags:
        - "cv"
      summary: "Delete CV by name"
      description: "Delete a CV defined on the system by name"
      operationId: deleteCvByName
      produces:
        - "application/json"
      security:
        - basicAuth: []
      parameters:
        - in: "path"
          name: "cvName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string
        "500":
          description: "Internal Server Error"
          schema:
            type: string

  /cv/getAllCVSummaries:
    get:
      tags:
        - "cv"
      summary: "Get all CV summaries"
      description: "Get a summary for all CVs defined on the system"
      operationId: getAllCVSummaries
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/cvSummary"
        "400":
          description: "Invalid status value"

  /cv/getNewCvTemplate:
    get:
      tags:
        - "cv"
      summary: "Get the new CV template"
      description: "Get the new CV template"
      operationId: getNewCvTemplate
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/cv"
        "400":
          description: "Invalid status value"

  /cv/permissions/{cvName}:
    get:
      tags:
        - "cv"
      summary: "Get CV permissions by CV name"
      description: "Get the CV permissions for a given CV name"
      operationId: getCvPermissions
      produces:
        - "application/json"
      security:
        - basicAuth: []
      parameters:
        - in: "path"
          name: "cvName"
          required: true
          type: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/cvPermissions"
        "400":
          description: "Invalid status value"

  /cv/permissions:
    post:
      tags:
        - "cv"
      summary: "Write or update CV permissions"
      description: "Write or update the CV permissions"
      operationId: postCvPermissions
      consumes:
        - "application/json"
      security:
        - basicAuth: []
      parameters:
        - in: "body"
          name: "cvPermissions"
          required: true
          schema:
            $ref: "#/definitions/cvPermissions"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: string
        "400":
          description: "Invalid status value"
          schema:
            type: string
        "500":
          description: "Internal Server Error"
          schema:
            type: string

definitions:

  user:
    type: "object"
    properties:
      userName:
        type: "string"
      userPassword:
        type: "string"
      userRoles:
        type: "array"
        items:
          type: "string"

  userRoles:
    type: "object"
    properties:
      userName:
        type: "string"
      userRoles:
        type: "array"
        items:
          type: "string"

  userPassword:
    type: "object"
    properties:
      userName:
        type: "string"
      userPassword:
        type: "string"

  cvSummary:
    type: "object"
    properties:
      name:
        type: "string"
      oneLineSummary:
        type: "string"
      owner:
        type: "string"

  cv:
    type: "object"
    properties:
      name:
        type: "string"
      firstName:
        type: "string"
      oneLineSummary:
        type: "string"
      summary:
        type: "string"
      footnote:
        type: "string"
      sourceURL:
        type: "string"
      interests:
        type: "array"
        items:
          type: "string"
      image:
        type: "string"
        format: binary
      header:
        $ref: "#/definitions/header"
      education:
        $ref: "#/definitions/education"
      skills:
        $ref: "#/definitions/skills"
      employment:
        $ref: "#/definitions/employment"

  header:
    type: "object"
    properties:
      dateOfBirth:
        type: "string"
        format: "date"
      currentPosition:
        type: "string"
      addressLines:
        type: "array"
        items:
          type: "string"
      phoneMobile:
        type: "string"
      emailAddress:
        type: "string"
      maritalStatus:
        type: "string"
      nationality:
        type: "string"
      recentWorkExperience:
        type: "array"
        items:
          $ref: "#/definitions/recentWorkExperienceItem"
      keySkills:
        type: "array"
        items:
          $ref: "#/definitions/keySkill"

  recentWorkExperienceItem:
    type: "object"
    properties:
      employer:
        type: "string"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      notes:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"

  keySkill:
    type: "object"
    properties:
      skill:
        type: "string"
      ability:
        type: "integer"
        format: "int32"

  education:
    type: "object"
    properties:
      notes:
        type: "string"
      institutions:
        type: "array"
        items:
          $ref: "#/definitions/educationInstitution"

  educationInstitution:
    type: "object"
    properties:
      institution:
        type: "string"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      qualifications:
        type: "array"
        items:
          $ref: "#/definitions/qualification"

  qualification:
    type: "object"
    properties:
      type:
        type: "string"
      subject:
        type: "string"
      grade:
        type: "string"
      notes:
        type: "string"

  skills:
    type: "object"
    properties:
      notes:
        type: "string"
      skillGroups:
        type: "array"
        items:
          $ref: "#/definitions/skillGroup"

  skillGroup:
    type: "object"
    properties:
      seq:
        type: "integer"
        format: "int64"
      heading:
        type: "string"
      skillSet:
        type: "array"
        items:
          $ref: "#/definitions/skill"

  skill:
    type: "object"
    properties:
      seq:
        type: "integer"
        format: "int64"
      type:
        type: "string"
      experience:
        type: "integer"
        format: "int32"
      ability:
        type: "integer"
        format: "int32"
      notes:
        type: "string"

  employment:
    type: "object"
    properties:
      notes:
        type: "string"
      institutions:
        type: "array"
        items:
          $ref: "#/definitions/employmentInstitution"

  employmentInstitution:
    type: "object"
    properties:
      employer:
        type: "string"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      notes:
        type: "array"
        items:
          type: "string"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/employmentRole"

  employmentRole:
    type: "object"
    properties:
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      title:
        type: "string"
      notes:
        type: "array"
        items:
          type: "string"

  cvPermissions:
    type: object
    properties:
      cvName:
        type: string
      cvOwner:
        type: string
      cvUsers:
        type: "array"
        items:
          type: "string"

